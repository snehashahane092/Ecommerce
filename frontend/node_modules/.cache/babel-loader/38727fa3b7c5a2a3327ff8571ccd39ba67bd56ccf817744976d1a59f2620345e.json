{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\Ecommerse (2)\\\\Ecommerse\\\\frontend\\\\src\\\\context\\\\ProductsContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { productAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProductsContext = /*#__PURE__*/createContext();\n\n// Mock data to use when API fails\nconst mockProducts = [{\n  _id: 'mock1',\n  name: 'Handcrafted Pottery',\n  description: 'Beautiful handmade pottery from rural artisans. Each piece is unique and crafted with traditional techniques passed down through generations.',\n  price: 1299,\n  image: 'https://images.unsplash.com/photo-1565193298357-c5b64a816c38?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2670&q=80',\n  category: 'Home Decor',\n  countInStock: 15\n}, {\n  _id: 'mock2',\n  name: 'Brass Decor Items',\n  description: 'Traditional brass items for home decoration. These pieces showcase the rich heritage of Indian metalwork and craftsmanship.',\n  price: 1499,\n  image: 'https://images.unsplash.com/photo-1580480055273-228ff5388ef8?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2670&q=80',\n  category: 'Home Decor',\n  countInStock: 8\n}, {\n  _id: 'mock3',\n  name: 'Embroidered Cushion Cover',\n  description: 'Hand-embroidered cushion covers with traditional designs. Each piece is carefully crafted by skilled artisans.',\n  price: 799,\n  image: 'https://images.unsplash.com/photo-1616486338812-3dadae4b4ace?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2532&q=80',\n  category: 'Home Decor',\n  countInStock: 12\n}, {\n  _id: 'mock4',\n  name: 'Organic Tea Collection',\n  description: 'Premium organic tea sourced from the hills of Darjeeling. This collection includes a variety of flavors and aromas that will delight your senses.',\n  price: 599,\n  image: 'https://images.unsplash.com/photo-1564890369478-c89ca6d9cde9?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2670&q=80',\n  category: 'Food',\n  countInStock: 25\n}, {\n  _id: 'mock5',\n  name: 'Handwoven Scarf',\n  description: 'Beautiful handwoven scarf made with traditional techniques. Perfect for adding a touch of elegance to any outfit.',\n  price: 899,\n  image: 'https://images.unsplash.com/photo-1549989476-69a92fa57c36?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2670&q=80',\n  category: 'Fashion',\n  countInStock: 18\n}];\nexport const ProductsProvider = ({\n  children\n}) => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch all products\n  const fetchProducts = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const {\n        data\n      } = await productAPI.getProducts();\n      setProducts(Array.isArray(data) ? data : []);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || 'Failed to fetch products';\n      setError(errorMessage);\n      console.error('Error fetching products:', err);\n      console.log('Using mock products as fallback');\n      // Use mock data instead of empty array when API fails\n      setProducts(mockProducts);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch single product\n  const fetchProduct = async id => {\n    try {\n      setLoading(true);\n      setError(null);\n      const {\n        data\n      } = await productAPI.getProduct(id);\n      return data;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Failed to fetch product');\n      console.error('Error fetching product:', err);\n\n      // Find a mock product to return as fallback\n      const mockProduct = mockProducts.find(p => p._id === id) || mockProducts[0];\n      console.log('Using mock product as fallback');\n      return mockProduct;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Create product (admin only)\n  const createProduct = async productData => {\n    try {\n      setLoading(true);\n      setError(null);\n      const {\n        data\n      } = await productAPI.createProduct(productData);\n      setProducts(prev => [...prev, data]);\n      return data;\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Failed to create product');\n      console.error('Error creating product:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update product (admin only)\n  const updateProduct = async (id, productData) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const {\n        data\n      } = await productAPI.updateProduct(id, productData);\n      setProducts(prev => prev.map(product => product._id === id ? data : product));\n      return data;\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Failed to update product');\n      console.error('Error updating product:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete product (admin only)\n  const deleteProduct = async id => {\n    try {\n      setLoading(true);\n      setError(null);\n      await productAPI.deleteProduct(id);\n      setProducts(prev => prev.filter(product => product._id !== id));\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      setError(((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || 'Failed to delete product');\n      console.error('Error deleting product:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load products on mount\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ProductsContext.Provider, {\n    value: {\n      products,\n      loading,\n      error,\n      fetchProducts,\n      fetchProduct,\n      createProduct,\n      updateProduct,\n      deleteProduct\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductsProvider, \"uC3AVzNvroqWig/cDvwe3iDm/Dc=\");\n_c = ProductsProvider;\nvar _c;\n$RefreshReg$(_c, \"ProductsProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","productAPI","jsxDEV","_jsxDEV","ProductsContext","mockProducts","_id","name","description","price","image","category","countInStock","ProductsProvider","children","_s","products","setProducts","loading","setLoading","error","setError","fetchProducts","data","getProducts","Array","isArray","err","_err$response","_err$response$data","errorMessage","response","message","console","log","fetchProduct","id","getProduct","_err$response2","_err$response2$data","mockProduct","find","p","createProduct","productData","prev","_err$response3","_err$response3$data","updateProduct","map","product","_err$response4","_err$response4$data","deleteProduct","filter","_err$response5","_err$response5$data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Downloads/Ecommerse (2)/Ecommerse/frontend/src/context/ProductsContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { productAPI } from '../services/api';\r\n\r\nexport const ProductsContext = createContext();\r\n\r\n// Mock data to use when API fails\r\nconst mockProducts = [\r\n  {\r\n    _id: 'mock1',\r\n    name: 'Handcrafted Pottery',\r\n    description: 'Beautiful handmade pottery from rural artisans. Each piece is unique and crafted with traditional techniques passed down through generations.',\r\n    price: 1299,\r\n    image: 'https://images.unsplash.com/photo-1565193298357-c5b64a816c38?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2670&q=80',\r\n    category: 'Home Decor',\r\n    countInStock: 15\r\n  },\r\n  {\r\n    _id: 'mock2',\r\n    name: 'Brass Decor Items',\r\n    description: 'Traditional brass items for home decoration. These pieces showcase the rich heritage of Indian metalwork and craftsmanship.',\r\n    price: 1499,\r\n    image: 'https://images.unsplash.com/photo-1580480055273-228ff5388ef8?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2670&q=80',\r\n    category: 'Home Decor',\r\n    countInStock: 8\r\n  },\r\n  {\r\n    _id: 'mock3',\r\n    name: 'Embroidered Cushion Cover',\r\n    description: 'Hand-embroidered cushion covers with traditional designs. Each piece is carefully crafted by skilled artisans.',\r\n    price: 799,\r\n    image: 'https://images.unsplash.com/photo-1616486338812-3dadae4b4ace?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2532&q=80',\r\n    category: 'Home Decor',\r\n    countInStock: 12\r\n  },\r\n  {\r\n    _id: 'mock4',\r\n    name: 'Organic Tea Collection',\r\n    description: 'Premium organic tea sourced from the hills of Darjeeling. This collection includes a variety of flavors and aromas that will delight your senses.',\r\n    price: 599,\r\n    image: 'https://images.unsplash.com/photo-1564890369478-c89ca6d9cde9?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2670&q=80',\r\n    category: 'Food',\r\n    countInStock: 25\r\n  },\r\n  {\r\n    _id: 'mock5',\r\n    name: 'Handwoven Scarf',\r\n    description: 'Beautiful handwoven scarf made with traditional techniques. Perfect for adding a touch of elegance to any outfit.',\r\n    price: 899,\r\n    image: 'https://images.unsplash.com/photo-1549989476-69a92fa57c36?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2670&q=80',\r\n    category: 'Fashion',\r\n    countInStock: 18\r\n  }\r\n];\r\n\r\nexport const ProductsProvider = ({ children }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch all products\r\n  const fetchProducts = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const { data } = await productAPI.getProducts();\r\n      setProducts(Array.isArray(data) ? data : []);\r\n    } catch (err) {\r\n      const errorMessage = err.response?.data?.message || err.message || 'Failed to fetch products';\r\n      setError(errorMessage);\r\n      console.error('Error fetching products:', err);\r\n      console.log('Using mock products as fallback');\r\n      // Use mock data instead of empty array when API fails\r\n      setProducts(mockProducts);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch single product\r\n  const fetchProduct = async (id) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const { data } = await productAPI.getProduct(id);\r\n      return data;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Failed to fetch product');\r\n      console.error('Error fetching product:', err);\r\n      \r\n      // Find a mock product to return as fallback\r\n      const mockProduct = mockProducts.find(p => p._id === id) || mockProducts[0];\r\n      console.log('Using mock product as fallback');\r\n      return mockProduct;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Create product (admin only)\r\n  const createProduct = async (productData) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const { data } = await productAPI.createProduct(productData);\r\n      setProducts(prev => [...prev, data]);\r\n      return data;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Failed to create product');\r\n      console.error('Error creating product:', err);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Update product (admin only)\r\n  const updateProduct = async (id, productData) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const { data } = await productAPI.updateProduct(id, productData);\r\n      setProducts(prev => prev.map(product => \r\n        product._id === id ? data : product\r\n      ));\r\n      return data;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Failed to update product');\r\n      console.error('Error updating product:', err);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Delete product (admin only)\r\n  const deleteProduct = async (id) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      await productAPI.deleteProduct(id);\r\n      setProducts(prev => prev.filter(product => product._id !== id));\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Failed to delete product');\r\n      console.error('Error deleting product:', err);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Load products on mount\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  return (\r\n    <ProductsContext.Provider\r\n      value={{\r\n        products,\r\n        loading,\r\n        error,\r\n        fetchProducts,\r\n        fetchProduct,\r\n        createProduct,\r\n        updateProduct,\r\n        deleteProduct\r\n      }}\r\n    >\r\n      {children}\r\n    </ProductsContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}