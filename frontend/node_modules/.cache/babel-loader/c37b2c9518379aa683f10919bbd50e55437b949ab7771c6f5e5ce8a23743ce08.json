{"ast":null,"code":"import axios from 'axios';\nimport config from '../config/config';\n\n// Ensure API_URL is always defined, fallback to default if missing\nconst fallbackApiUrl = 'http://localhost:5001/api';\nconst API_URL = typeof process !== 'undefined' && process.env && process.env.REACT_APP_API_URL || config.API_URL || fallbackApiUrl;\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const user = JSON.parse(localStorage.getItem('user') || '{}');\n  if (user.token) {\n    config.headers.Authorization = `Bearer ${user.token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Product API calls\nexport const productAPI = {\n  // Get all products\n  getProducts: () => api.get('/products'),\n  // Get single product\n  getProduct: id => api.get(`/products/${id}`),\n  // Create product (admin only)\n  createProduct: productData => api.post('/products', productData),\n  // Update product (admin only)\n  updateProduct: (id, productData) => api.put(`/products/${id}`, productData),\n  // Delete product (admin only)\n  deleteProduct: id => api.delete(`/products/${id}`)\n};\n\n// User API calls\nexport const userAPI = {\n  // Register user\n  register: userData => api.post('/users/register', userData),\n  // Login user\n  login: credentials => api.post('/users/login', credentials),\n  // Get user profile\n  getProfile: () => api.get('/users/profile'),\n  // Update user profile\n  updateProfile: userData => api.put('/users/profile', userData)\n};\n\n// Health check\nexport const healthCheck = () => api.get('/health');\nexport const orderAPI = {\n  createOrder: orderData => api.post('/orders', orderData),\n  getMyOrders: () => api.get('/orders/myorders'),\n  getOrderById: orderId => api.get(`/orders/${orderId}`)\n};\nexport default api;","map":{"version":3,"names":["axios","config","fallbackApiUrl","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","user","JSON","parse","localStorage","getItem","token","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","productAPI","getProducts","get","getProduct","id","createProduct","productData","post","updateProduct","put","deleteProduct","delete","userAPI","register","userData","login","credentials","getProfile","updateProfile","healthCheck","orderAPI","createOrder","orderData","getMyOrders","getOrderById","orderId"],"sources":["C:/Users/Admin/Downloads/Ecommerse (2)/Ecommerse/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport config from '../config/config';\r\n\r\n// Ensure API_URL is always defined, fallback to default if missing\r\nconst fallbackApiUrl = 'http://localhost:5001/api';\r\nconst API_URL = (typeof process !== 'undefined' && process.env && process.env.REACT_APP_API_URL) || config.API_URL || fallbackApiUrl;\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\r\n    if (user.token) {\r\n      config.headers.Authorization = `Bearer ${user.token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Token expired or invalid\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Product API calls\r\nexport const productAPI = {\r\n  // Get all products\r\n  getProducts: () => api.get('/products'),\r\n  \r\n  // Get single product\r\n  getProduct: (id) => api.get(`/products/${id}`),\r\n  \r\n  // Create product (admin only)\r\n  createProduct: (productData) => api.post('/products', productData),\r\n  \r\n  // Update product (admin only)\r\n  updateProduct: (id, productData) => api.put(`/products/${id}`, productData),\r\n  \r\n  // Delete product (admin only)\r\n  deleteProduct: (id) => api.delete(`/products/${id}`),\r\n};\r\n\r\n// User API calls\r\nexport const userAPI = {\r\n  // Register user\r\n  register: (userData) => api.post('/users/register', userData),\r\n  \r\n  // Login user\r\n  login: (credentials) => api.post('/users/login', credentials),\r\n  \r\n  // Get user profile\r\n  getProfile: () => api.get('/users/profile'),\r\n  \r\n  // Update user profile\r\n  updateProfile: (userData) => api.put('/users/profile', userData),\r\n};\r\n\r\n// Health check\r\nexport const healthCheck = () => api.get('/health');\r\n\r\nexport const orderAPI = {\r\n  createOrder: (orderData) => api.post('/orders', orderData),\r\n  getMyOrders: () => api.get('/orders/myorders'),\r\n  getOrderById: (orderId) => api.get(`/orders/${orderId}`),\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}